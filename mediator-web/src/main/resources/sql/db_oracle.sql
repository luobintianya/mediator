/*渠道*/
--DROP TABLE CHANNEL;
CREATE TABLE CHANNEL(
    CHANNEL_ID INTEGER PRIMARY KEY,  /*主键*/
    CODE VARCHAR2(10) NOT NULL,              		/*代号*/
    NAME VARCHAR2(20) NOT NULL,              		/*名称*/
    PRIORITY INTEGER,                         		/*排序号*/
    STATUS INTEGER,                          		/*状态*/
    CREATE_TIME TIMESTAMP NOT NULL,          		/*创建时间*/
    CONSTRAINT UK_CHANNEL_CODE UNIQUE (CODE)
);
INSERT INTO CHANNEL (CHANNEL_ID, CODE, NAME, PRIORITY, STATUS, CREATE_TIME) values (2, 'JINGDONG', '京东', 4, 1, SYSDATE);
INSERT INTO CHANNEL (CHANNEL_ID, CODE, NAME, PRIORITY, STATUS, CREATE_TIME) values (12, 'SYSTEM', '系统', 0, 1, SYSDATE);

/*应用*/
--DROP TABLE APPLICATION;
CREATE TABLE APPLICATION(
    APPLICATION_ID INTEGER PRIMARY KEY,  /*主键*/
    NAME VARCHAR2(20) NOT NULL,                          /*名称*/
    CODE VARCHAR2(15) NOT NULL,				/*代号*/
    STORE_ID INTEGER NOT NULL,                          /* store id*/
    CHANNEL_ID INTEGER NOT NULL,                        /*渠道id*/
    CREATE_TIME TIMESTAMP NOT NULL,                      /*创建时间*/
    APPKEY VARCHAR2(50),
    APPSECRET VARCHAR2(100),
    APPURL VARCHAR2(200),
    SESSIONKEY VARCHAR2(200),
    VENDOR_ID VARCHAR2(20),
    VENDOR_NAME VARCHAR2(20),
    NICK VARCHAR2(100),
    PRIORITY INTEGER,                                   /*排序号*/
    STATUS INTEGER,                                     /*状态*/
    FIELD1 VARCHAR2(200),                                /*预留扩展*/
    FIELD2 VARCHAR2(100),                                /*预留扩展*/
    FIELD3 INTEGER,                                     /*预留扩展*/
    FOREIGN KEY(CHANNEL_ID) REFERENCES CHANNEL(CHANNEL_ID),
    CONSTRAINT UK_APPLICATION_CODE UNIQUE (CODE),
    CONSTRAINT UK_APPLICATION_STORE_ID UNIQUE (STORE_ID)
);
INSERT INTO APPLICATION (APPLICATION_ID, NAME, CODE, STORE_ID, CHANNEL_ID, CREATE_TIME, APPKEY, APPSECRET, APPURL, SESSIONKEY, VENDOR_ID, VENDOR_NAME, NICK, PRIORITY, STATUS, FIELD1, FIELD2, FIELD3) VALUES (10, 'jd_nw', 'jd_nw', 1006, 2, SYSDATE, '1C8E24557ACCC919B1F85978224965CD111', 'a7747b70f9734fdb9efd72780daed1f4', 'https://api.jd.com/routerjson', '8dc5c8f0-2521-4dc6-a7f7-7bb26fb18782', null, '', '', 7, 1, null, null, null);
INSERT INTO APPLICATION (APPLICATION_ID, NAME, CODE, STORE_ID, CHANNEL_ID, CREATE_TIME, APPKEY, APPSECRET, APPURL, SESSIONKEY, VENDOR_ID, VENDOR_NAME, NICK, PRIORITY, STATUS, FIELD1, FIELD2, FIELD3) VALUES (15, '系统应用', 'SYSTEM', 0, 12, SYSDATE, '1012339797', 'sandboxf10b366ceb2a23b0955ab15d6', 'http://gw.api.tbsandbox.com/router/rest', '6201f28218b85c0c1086368dae6e676bb70bdf1cd2856273651882635', null, null, '系统', 0, 1, null, null, null);

/*task*/
--DROP TABLE TASK_TEMPLATE;
CREATE TABLE TASK_TEMPLATE(
    TEMPLATE_ID INTEGER PRIMARY KEY,      /*主键*/
    DESCRIPTION VARCHAR2(50),                             /*描述*/
    TYPE VARCHAR2(15) NOT NULL,                           /*类型*/
    SUBTYPE VARCHAR2(30) NOT NULL,                        /*子类型*/
    REPEATABLE INTEGER,                                   /*是否可重复*/
    RERUN INTEGER,                                        /*是否可重跑*/
    HUNG INTEGER,                                         /*是否允许挂起*/
    PRIORITY INTEGER,                                    /*排序号*/
    STATUS INTEGER,                                      /*状态*/
    CONSTRAINT UK_TYPE_SUBTYPE UNIQUE (TYPE,SUBTYPE)
);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (1, '订单取消', 'ORDER', 'cancel', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (2, '创建订单', 'ORDER', 'create', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (3, '发货', 'ORDER', 'delivery', 1, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (4, '订单列表', 'ORDER', 'list', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (5, '订单部分成功', 'ORDER', 'partlySuccess', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (6, '订单收货地址修改', 'ORDER', 'receiveAddressUpdate', 1, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (7, '订单重新发货,更新物流信息', 'ORDER', 'reDelivery', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (8, '订单卖家备注修改', 'ORDER', 'sellerMemoModify', 1, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (9, '预售订单付定金', 'ORDER', 'stepPay', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (10, '订单成功', 'ORDER', 'success', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (11, '订单数据同步列表', 'ORDER', 'syncList', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (12, '订单数据同步', 'ORDER', 'sync', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (13, '淘宝/天猫渠道商品下架', 'PRODUCT', 'productChannelOffShelf', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (14, '商品创建', 'PRODUCT', 'create', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (15, '获取用户下的所有运费模板', 'PRODUCT', 'deliveryTemplatesGet', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (16, '更新库存', 'PRODUCT', 'productInventoryUpdate', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (17, '库存同步包装', 'PRODUCT', 'productInventoryUpdateWrapper', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (18, '商品下架', 'PRODUCT', 'offShelf', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (19, '商品下架包装task', 'PRODUCT', 'offShelfWrapper', 0, 0, 0, 3, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (20, '商品上架task', 'PRODUCT', 'onShelf', 1, 0, 0, 3, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (21, '商品上架包装task', 'PRODUCT', 'onShelfWrapper', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (22, '商品、sku价格更新task', 'PRODUCT', 'priceUpdate', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (23, '商品更新task', 'PRODUCT', 'update', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (24, '单个sku库存同步', 'PRODUCT', 'skuInventoryUpdate', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (25, 'sku库存同步包装
', 'PRODUCT', 'skuInventoryUpdateWrapper', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (26, '买家退货,上传物流信息', 'REFUND', 'buyerReturnGoods', 0, 1, 0, 5, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (27, '退款关闭', 'REFUND', 'close', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (28, '退款创建task', 'REFUND', 'create', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (29, '抓取退款列表task', 'REFUND', 'list', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (30, '卖家同意退款', 'REFUND', 'sellerAgree', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (31, '卖家拒绝退款申请', 'REFUND', 'sellerRefuse', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (32, '退款成功', 'REFUND', 'success', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (33, '退款修改task', 'REFUND', 'update', 0, 1, 0, 3, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (34, '清理缓存', 'SYSTEM', 'cacheClean', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (35, '暂停服务', 'SYSTEM', 'pauseService', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (36, '恢复服务 目前仅包括恢复抓单', 'SYSTEM', 'recoveryService', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (37, '扫尾task', 'SYSTEM', 'saowei', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (38, '恢复抓单', 'SYSTEM', 'startGetOrder', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (39, '停止抓单,task还是会创建', 'SYSTEM', 'stopGetOrder', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (40, '订单部分发货', 'ORDER', 'partlySellerShip', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (41, '渠道商品属性获取', 'PRODUCT', 'propertyGet', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (42, '手工抓单', 'ORDER', 'reCreate', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (43, '退货创建', 'RETURN', 'create', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (44, '退货列表', 'RETURN', 'list', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (46, '处理商品映射数据', 'PRODUCT', 'mapping', 1, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (47, '抓取商品映射数据', 'PRODUCT', 'mappingList', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (59, '获取po列表', 'ORDER', 'poList', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (55, '发送拣货单', 'ORDER', 'postPick', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (56, '创建拣货单', 'ORDER', 'createPick', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (57, '创建发货单', 'ORDER', 'vipdeliver', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (54, '批量创建拣货单', 'ORDER', 'batchPickCreate', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (58, '创建PO单', 'ORDER', 'createPo', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (50, '抓取所有类目', 'PRODUCT', 'categoryGet', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (51, '退款补单', 'REFUND', 'refundsupplement', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (52, '征集预售列表', 'ORDER', 'zhengjilist', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (53, '抓取征集订单', 'ORDER', 'zhengjisupplement', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (45, '订单补单', 'ORDER', 'supplement', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (60, '上传出仓单明细', 'ORDER', 'importDeliver', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (61, '确认出仓单', 'ORDER', 'confirmDelivery', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (65, '获取拣货单中的订单', 'ORDER', 'getInventoryDeductOrders', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (66, '实时销售订单查询', 'ORDER', 'getInventoryOccupiedOrders', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (67, '获取po列表', 'ORDER', 'getPoList', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (62, '整单退款创建', 'REFUND', 'wholeCreate', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (63, '整单退款成功', 'REFUND', 'wholeSuccess', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (64, '整单退款关闭', 'REFUND', 'wholeClose', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (68, 'kaola退款关闭', 'REFUND', 'kaolaClose', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (69, 'kaola退款创建task', 'REFUND', 'kaolaCreate', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (70, 'kaola卖家同意退款', 'REFUND', 'kaolaSellerAgree', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (71, 'kaola退款成功', 'REFUND', 'kaolaSuccess', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (72, 'kaola卖家拒绝退款', 'REFUND', 'kaolaSellerRefuse', 0, 1, 0, 3, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (73, '抓取sku映射数据', 'SKU', 'skuMappingList', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (74, '保存或更新sku映射数据', 'SKU', 'saveSkuMapping', 1, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (75, 'kaola买家退货,上传物流信息.', 'REFUND', 'kaolaBuyerReturnGoods', 0, 1, 0, 10, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (76, 'kaola订单列表', 'ORDER', 'kaoLaList', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (77, 'kaola抓取退款列表task', 'REFUND', 'KaoLaList', 0, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (78, '门店接单', 'ORDER', 'RESPONSEORDERSTORE', 1, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (79, '门店发货', 'ORDER', 'CONFIRMSTOREDELIVERY', 1, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (80, '确认拒收结果', 'RETURN', 'CONFIRMREFUSERESULT', 1, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (81, '确认客退结果', 'RETURN', 'CONFIRMRETURNRESULT', 1, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (82, '拒收订单列表', 'RETURN', 'oxoReturnList', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (83, '更新oxo订单金额', 'ORDER', 'updateOXOOrderPrice', 0, 1, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (84, '获取oxo订单装运单', 'ORDER', 'getOXOLogisticsTransportNo', 0, 1, 0, 0, 1);

INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (85, '取消订单列表', 'ORDER', 'cancelList', 1, 0, 0, 0, 1);
INSERT INTO TASK_TEMPLATE (TEMPLATE_ID, DESCRIPTION, TYPE, SUBTYPE, REPEATABLE, RERUN, HUNG, PRIORITY, STATUS) VALUES (86, '审核取消订单', 'ORDER', 'cancelAuditing', 1, 1, 0, 0, 1);

INSERT INTO cron_config (CRON_ID, DESCRIPTION, CLASS_NAME, EXPRESSION, IS_GLOBAL, STATUS) VALUES (22, 'kaola的sku的映射抓取', 'net.chinacloud.mediator.kaola.job.SkuMappingJob', '0 40 21 * * ?', 1, 0);
INSERT INTO cron_config (CRON_ID, DESCRIPTION, CLASS_NAME, EXPRESSION, IS_GLOBAL, STATUS) VALUES (23, '考拉批量拉取订单', 'net.chinacloud.mediator.job.order.OrderJob', '0 1/3 * * * ?', 1, 0);
INSERT INTO cron_config (CRON_ID, DESCRIPTION, CLASS_NAME, EXPRESSION, IS_GLOBAL, STATUS) VALUES (24, 'kaola抓取退款列表', 'net.chinacloud.mediator.job.refund.RefundJob', '0 0/5 * * * ?', 1, 0);


INSERT INTO cron_param (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) VALUES (626, 107, 'CHANNEL_ID', '5');
INSERT INTO cron_param (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) VALUES (627, 107, 'APPLICATION_ID', '5');
INSERT INTO cron_param (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) VALUES (628, 107, 'STATUS', '1_1001,3_1001,5_1001,6_1001');
INSERT INTO cron_param (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) VALUES (629, 108, 'CHANNEL_ID', '5');
INSERT INTO cron_param (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) VALUES (630, 108, 'APPLICATION_ID', '5');
INSERT INTO cron_param (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) VALUES (631, 108, 'STATUS', '1,2,3,4,5');
INSERT INTO cron_param (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) VALUES (641, 106, 'CHANNEL_ID', '5');
INSERT INTO cron_param (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) VALUES (642, 106, 'APPLICATION_ID', '5');
INSERT INTO cron_param (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) VALUES (643, 106, 'STATUS', '5,4');
--DROP TABLE TASK;
CREATE TABLE TASK(
    TASK_ID INTEGER PRIMARY KEY,                     /*主键*/
    TEMPLATE_ID INTEGER,                                            /*模板id*/
    DATAID VARCHAR2(100) NOT NULL,            
    DATA CLOB,                                              /*json格式数据*/
    STARTTIME TIMESTAMP NOT NULL,                                    /*开始时间*/
    ENDTIME TIMESTAMP,                                               /*结束时间*/
    CHANNEL_ID INTEGER NOT NULL,                                    /*渠道编号*/
    APPLICATION_ID INTEGER NOT NULL,                                /*店铺*/
    STATUS INTEGER NOT NULL,                                        /*状态*/
    ERRORMESSAGE VARCHAR2(450),                                      /*错误码*/
    FOREIGN KEY(CHANNEL_ID) REFERENCES CHANNEL(CHANNEL_ID) ON DELETE CASCADE,
    FOREIGN KEY(TEMPLATE_ID) REFERENCES TASK_TEMPLATE(TEMPLATE_ID) ON DELETE CASCADE,
    FOREIGN KEY(APPLICATION_ID) REFERENCES APPLICATION (APPLICATION_ID) ON DELETE CASCADE
);
CREATE INDEX DATAID_IN ON TASK (DATAID);
CREATE INDEX STATUS_IN ON TASK (STATUS);

/*调度*/
--DROP TABLE CRON_CONFIG;
CREATE TABLE CRON_CONFIG(
    CRON_ID INTEGER PRIMARY KEY,               /*主键*/
    DESCRIPTION VARCHAR2(50),                                  /*描述*/
    CLASS_NAME VARCHAR2(200) NOT NULL,                         /*类名*/
    EXPRESSION VARCHAR2(50) NOT NULL,                          /*cron表达式*/
    IS_GLOBAL INTEGER NOT NULL,                                /*是否全局*/
    STATUS INTEGER NOT NULL                                    /*状态*/
    --CHANNEL_ID INTEGER(10) NOT NULL,                            /*渠道编号*/
    --APPLICATION_ID INTEGER(10) NOT NULL                         /*店铺*/
    --FOREIGN KEY(CHANNEL_ID) REFERENCES CHANNEL(CHANNEL_ID),
    --FOREIGN KEY(APPLICATION_ID) REFERENCES APPLICATION (APPLICATION_ID)
);

--DROP TABLE CRON_PARAM;
CREATE TABLE CRON_PARAM(
    PARAM_ID INTEGER PRIMARY KEY,    /*主键*/
    CRON_ID INTEGER NOT NULL,            
    PARAM_NAME VARCHAR2(20) NOT NULL,                /*参数名*/
    PARAM_VALUE VARCHAR2(70) NOT NULL,               /*参数值*/
    FOREIGN KEY(CRON_ID) REFERENCES CRON_CONFIG(CRON_ID) ON DELETE CASCADE
);

--DROP TABLE CRON_LASTTIME;
CREATE TABLE CRON_LASTTIME(
    APPLICATION_ID INTEGER DEFAULT '0' NOT NULL,    --应用id
    TEMPLATE_ID INTEGER DEFAULT '0' NOT NULL,       --模板id
    LASTTIME INTEGER DEFAULT '0',                --上次运行时间
    PRIMARY KEY (APPLICATION_ID, TEMPLATE_ID)
);

--cron data
insert into CRON_CONFIG (CRON_ID, DESCRIPTION, CLASS_NAME, EXPRESSION, IS_GLOBAL, STATUS) values (1, '京东批量抓取订单', 'net.chinacloud.mediator.job.order.OrderJob', '0 5/10 * * * ?', 1, 1);
insert into CRON_CONFIG (CRON_ID, DESCRIPTION, CLASS_NAME, EXPRESSION, IS_GLOBAL, STATUS) values (2, '扫尾', 'net.chinacloud.mediator.job.system.SaoweiJob', '0 0/30 * * * ?', 1, 1);
insert into CRON_CONFIG (CRON_ID, DESCRIPTION, CLASS_NAME, EXPRESSION, IS_GLOBAL, STATUS) values (3, '京东补单(数据库时间)', 'net.chinacloud.mediator.job.order.OrderSupplementJob', '0 10 0/2 * * ?', 1, 1);
insert into CRON_CONFIG (CRON_ID, DESCRIPTION, CLASS_NAME, EXPRESSION, IS_GLOBAL, STATUS) values (4, '京东补单(前一天)', 'net.chinacloud.mediator.job.order.OrderSupplementJob', '0 1 0 * * ?', 1, 1);
insert into CRON_CONFIG (CRON_ID, DESCRIPTION, CLASS_NAME, EXPRESSION, IS_GLOBAL, STATUS) values (5, '抓取映射关系', 'net.chinacloud.mediator.job.product.MappingJob', '0 0 22 * * ?', 1, 1);

insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (12, 1, 'CHANNEL_ID', '2');
insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (13, 1, 'APPLICATION_ID', '10');
insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (14, 1, 'STATUS', 'WAIT_SELLER_STOCK_OUT,FINISHED_L,TRADE_CANCELED');
insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (47, 5, 'CHANNEL_ID', '2');
insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (4, 2, 'CHANNEL_ID', '2');
insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (5, 2, 'TASK_RERUN_DELAY', '86400');
insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (33, 4, 'CHANNEL_ID', '2');
insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (34, 4, 'APPLICATION_ID', '10');
insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (35, 4, 'STATUS', 'WAIT_SELLER_STOCK_OUT,FINISHED_L,TRADE_CANCELED');
insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (48, 5, 'APPLICATION_ID', '10');
insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (22, 3, 'CHANNEL_ID', '2');
insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (23, 3, 'APPLICATION_ID', '10');
insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (24, 3, 'STATUS', 'WAIT_SELLER_STOCK_OUT,FINISHED_L,TRADE_CANCELED');
insert into CRON_PARAM (PARAM_ID, CRON_ID, PARAM_NAME, PARAM_VALUE) values (36, 4, 'USE_DB_TIME', 'false');

--add 2015-06-27 商品上传相关表定义
--DROP TABLE CATEGORY_MAPPING;
--渠道类目映射表
CREATE TABLE CATEGORY_MAPPING(
    MAPPING_ID INTEGER NOT NULL, --主键
    CHANNEL_CAT_ID INTEGER NOT NULL,     --渠道叶子类目id
    CHANNEL_CAT_NAME VARCHAR2(40),       --渠道叶子类目名称
    CAT_ID INTEGER NOT NULL,     --系统叶子类目id
    CAT_NAME VARCHAR2(30),       --系统叶子类目名称
    APPLICATION_ID INTEGER NOT NULL,    --所属应用
    PRIMARY KEY (MAPPING_ID),       --主键
    FOREIGN KEY(APPLICATION_ID) REFERENCES APPLICATION(APPLICATION_ID) ON DELETE CASCADE
);
ALTER TABLE CATEGORY_MAPPING ADD CONSTRAINT UNIQUE_CATEGORY_MAPPING UNIQUE (CAT_ID, APPLICATION_ID);

--DROP TABLE PRODUCT_PARTNUMBER_MAPPING;
--渠道商品id与外部商家编码映射表
CREATE TABLE PRODUCT_PARTNUMBER_MAPPING(
    MAPPING_ID INTEGER NOT NULL, --主键
    CHANNEL_PRODUCT_ID VARCHAR2(20) NOT NULL,	--渠道商品id
    OUTER_ID VARCHAR2(20) NOT NULL,		--外部商家编码
    TYPE INTEGER NOT NULL,			--类型,0:product,1:sku
    APPLICATION_ID INTEGER NOT NULL,    --所属应用
    PRIMARY KEY (MAPPING_ID),       --主键
    FOREIGN KEY(APPLICATION_ID) REFERENCES APPLICATION(APPLICATION_ID) ON DELETE CASCADE
);
ALTER TABLE PRODUCT_PARTNUMBER_MAPPING ADD CONSTRAINT UK_PRODUCT_PARTNUMBER_MAPPING UNIQUE (OUTER_ID, APPLICATION_ID);

--错误消息临时表
--DROP TABLE TASK_FAILURE_MSG;
CREATE TABLE TASK_FAILURE_MSG (
    TASK_ID INTEGER NOT NULL,
    CODE VARCHAR2(450) DEFAULT NULL,
    CREATETIME TIMESTAMP NOT NULL,
    LASTUPDATE TIMESTAMP DEFAULT NULL,
    STATUS INTEGER NOT NULL,
    PRIMARY KEY (TASK_ID),
    FOREIGN KEY(TASK_ID) REFERENCES TASK(TASK_ID) ON DELETE CASCADE
);

--Registry(注册表)
CREATE TABLE REGISTRYDATA (
  REGISTRY_KEY varchar2(50) NOT NULL,
  REGISTRY_VALUE varchar2(256) NOT NULL,
  REGISTRY_DESCRIPTION varchar2(100) NOT NULL,
  PRIMARY KEY (REGISTRY_KEY) 
);
insert into MEDIATORUR.REGISTRYDATA (REGISTRY_KEY, REGISTRY_VALUE, REGISTRY_DESCRIPTION) values ('mailFrom', 'test@test.com', '发件人邮箱2');
insert into MEDIATORUR.REGISTRYDATA (REGISTRY_KEY, REGISTRY_VALUE, REGISTRY_DESCRIPTION) values ('mailToList', 'test1@test.com', '收件人');
insert into MEDIATORUR.REGISTRYDATA (REGISTRY_KEY, REGISTRY_VALUE, REGISTRY_DESCRIPTION) values ('sendMail', 'false', '是否要发邮件');

INSERT INTO registrydata (REGISTRY_KEY, REGISTRY_VALUE, REGISTRY_DESCRIPTION) VALUES ('endtime_exchange_hour', '0', '结束时间往(负数)前推多少小时，0表示结束时间为当前时间，正数是往后退');
INSERT INTO registrydata (REGISTRY_KEY, REGISTRY_VALUE, REGISTRY_DESCRIPTION) VALUES ('endtime_order_hour', '0', '结束时间往(负数)前推多少小时，0表示结束时间为当前时间，正数是往后退');
INSERT INTO registrydata (REGISTRY_KEY, REGISTRY_VALUE, REGISTRY_DESCRIPTION) VALUES ('isResponseUpdateSkuInventory', 'N', '是否回复库存更新结果');

--序列及触发器
CREATE SEQUENCE "MEDIATORUR"."CATEGORY_MAPPING_SEQ" MINVALUE 1 MAXVALUE 100000 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER NOCYCLE;
@delimiter @;
CREATE OR REPLACE TRIGGER "MEDIATORUR"."CATEGORY_MAPPING_TRIGGER" 
BEFORE INSERT ON CATEGORY_MAPPING FOR EACH ROW
BEGIN
SELECT CATEGORY_MAPPING_SEQ.NEXTVAL INTO :NEW.MAPPING_ID FROM DUAL;
END;@

CREATE SEQUENCE "MEDIATORUR"."TASK_SEQ" MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER NOCYCLE;
@delimiter @;
CREATE OR REPLACE TRIGGER "MEDIATORUR"."TASK_TRIGGER" 
BEFORE INSERT ON TASK FOR EACH ROW
BEGIN
SELECT TASK_SEQ.NEXTVAL INTO :NEW.TASK_ID FROM DUAL;
END;@

CREATE SEQUENCE "MEDIATORUR"."PRODUCT_PARTNUMBER_MAPPING_SEQ" MINVALUE 1 MAXVALUE 100000 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER NOCYCLE;
@delimiter @;
CREATE OR REPLACE TRIGGER "MEDIATORUR"."PRODUCT_PARTNUMBER_MAP_TRIGGER" 
BEFORE INSERT ON PRODUCT_PARTNUMBER_MAPPING FOR EACH ROW
BEGIN
SELECT PRODUCT_PARTNUMBER_MAPPING_SEQ.NEXTVAL INTO :NEW.MAPPING_ID FROM DUAL;
END;@

/*CREATE SEQUENCE "MEDIATORUR"."PRODUCT_IMAGE_SEQ"  MINVALUE 1 MAXVALUE 100000 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE;
@delimiter @;
CREATE OR REPLACE TRIGGER "MEDIATORUR"."PRODUCT_IMAGE_TRIGGER" 
BEFORE INSERT ON PRODUCT_IMAGE FOR EACH ROW
BEGIN
SELECT PRODUCT_IMAGE_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;@*/

--调度
CREATE SEQUENCE "MEDIATORUR"."CRON_CONFIG_SEQ" MINVALUE 100 MAXVALUE 10000 INCREMENT BY 1 START WITH 100 NOCACHE NOORDER NOCYCLE;
@delimiter @;
CREATE OR REPLACE TRIGGER "MEDIATORUR"."CRON_CONFIG_TRIGGER" 
BEFORE INSERT ON CRON_CONFIG FOR EACH ROW
BEGIN
SELECT CRON_CONFIG_SEQ.NEXTVAL INTO :NEW.CRON_ID FROM DUAL;
END;@

CREATE SEQUENCE "MEDIATORUR"."CRON_PARAM_SEQ" MINVALUE 100 MAXVALUE 10000 INCREMENT BY 100 START WITH 1 NOCACHE NOORDER NOCYCLE;
@delimiter @;
CREATE OR REPLACE TRIGGER "MEDIATORUR"."CRON_PARAM_TRIGGER" 
BEFORE INSERT ON CRON_PARAM FOR EACH ROW
BEGIN
SELECT CRON_PARAM_SEQ.NEXTVAL INTO :NEW.PARAM_ID FROM DUAL;
END;@

--DROP TABLE PRODUCT_IMAGE;
--DROP TABLE TASK_FAILURE_MSG;
--DROP TABLE TB_CHANNEL_ATTR_MAPPING;
--DROP TABLE JD_CHANNEL_ATTR_MAPPING;
--DROP TABLE CHANNEL_ATTRVAL_MAPPING;
--DROP TABLE TMALL_CHANNEL_ATTR_MAPPING;
--DROP TABLE PRODUCT_PARTNUMBER_MAPPING;
--DROP TABLE CATEGORY_MAPPING;
--DROP TABLE CRON_LASTTIME;
--DROP TABLE CRON_PARAM;
--DROP TABLE CRON_CONFIG;
--DROP TABLE TASK;
--DROP TABLE TASK_TEMPLATE;
--DROP TABLE APPLICATION;
--DROP TABLE CHANNEL;

-------------------------
--系统登录用户
CREATE TABLE SYS_USER
(
	ID INTEGER NOT NULL,
	USERNAME VARCHAR2(50) NOT NULL,
	PASSWORD VARCHAR2(50) NOT NULL,
	EMAIL VARCHAR2(50),
	SALT VARCHAR2(10),
	CREATETIME TIMESTAMP DEFAULT SYSDATE,
	LASTUPDATE TIMESTAMP DEFAULT SYSDATE,
	ADMIN INTEGER DEFAULT '1',
	DELETED INTEGER DEFAULT '0',
	PRIMARY KEY (ID)
);
insert into sys_user (ID, USERNAME, PASSWORD, EMAIL, SALT, CREATETIME, LASTUPDATE, ADMIN, DELETED) values (2, 'admin', '36E7F71165E2FB7BAB3DE0FC380BADBB', 'ywu@wuxicloud.com', 'WefayGPzFY', SYSDATE, SYSDATE, '1', 0);
insert into sys_user (ID, USERNAME, PASSWORD, EMAIL, SALT, CREATETIME, LASTUPDATE, ADMIN, DELETED) values (3, 'test1', 'E358A48126754B316D957AC5861E6BCE', 'test1@wuxicloud.com', 'XiMnDPDzPl', SYSDATE, SYSDATE, '1', 0);

--角色
CREATE TABLE SYS_ROLE(
    ID INTEGER PRIMARY KEY,
    NAME VARCHAR2(30) NOT NULL,
    IDENTIFIER VARCHAR2(10) NOT NULL,
    DESCRIPTION VARCHAR2(50)
);
insert into sys_role (ID, NAME, IDENTIFIER, DESCRIPTION) values (1, '系统管理员', 'admin', '系统管理员');
insert into sys_role (ID, NAME, IDENTIFIER, DESCRIPTION) values (2, '普通用户', 'common', '普通用户');

--用户、角色关联表
CREATE TABLE SYS_USER_ROLE(
    ID INTEGER PRIMARY KEY,
    USER_ID INTEGER NOT NULL,
    ROLE_ID INTEGER NOT NULL,
    FOREIGN KEY(USER_ID) REFERENCES SYS_USER (ID) ON DELETE CASCADE,
    FOREIGN KEY(ROLE_ID) REFERENCES SYS_ROLE (ID) ON DELETE CASCADE
);
insert into sys_user_role (ID, USER_ID, ROLE_ID) values (1, 2, 1);
insert into sys_user_role (ID, USER_ID, ROLE_ID) values (2, 3, 2);

--kaola的sku映射表关系
CREATE TABLE kaola_sku_mapping(
    MAPPING_ID INTEGER NOT NULL, --主键
    CHANNEL_SKU_ID VARCHAR2(20) NOT NULL,	--渠道SKU的KEY
    OUTER_SKU_ID VARCHAR2(20) NOT NULL,		--外部商家编码的sku货号
    MODIFYTIME  VARCHAR2(20) ,			
    APPLICATIONID INTEGER NOT NULL,    --所属应用
    PRIMARY KEY (MAPPING_ID),       --主键
    FOREIGN KEY(APPLICATIONID) REFERENCES APPLICATION(APPLICATION_ID) ON DELETE CASCADE
);
 CREATE INDEX
    INDEX_SKU_PARTNUMBER_MAPPING
ON kaola_sku_mapping
  (OUTER_SKU_ID,APPLICATIONID);
ALTER TABLE kaola_sku_mapping ADD CONSTRAINT UK_SKU_PARTNUMBER_MAPPING UNIQUE (OUTER_SKU_ID, APPLICATIONID);


CREATE SEQUENCE KAOLA_SKU_MAPPING_SEQ INCREMENT BY 1 START WITH 1 MAXVALUE 1000000
MINVALUE 1 NOCYCLE NOCACHE NOORDER
@delimiter %%%;
CREATE OR REPLACE TRIGGER KAOLA_SKU_MAP_TRIGGER
BEFORE INSERT ON KAOLA_SKU_MAPPING FOR EACH ROW
BEGIN
SELECT KAOLA_SKU_MAPPING_SEQ.NEXTVAL INTO :NEW.MAPPING_ID FROM DUAL;
END;
%%%
@delimiter ;
%%%


CREATE SEQUENCE "INVENTORY_UPDATE_REMARK_SEQ" MINVALUE 1 MAXVALUE 100000 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER NOCYCLE;
@delimiter @;
CREATE OR REPLACE TRIGGER "INVENTORY_UPDATE_REMARK_TRIGGER" 
BEFORE INSERT ON INVENTORY_UPDATE_REMARK FOR EACH ROW
BEGIN
SELECT INVENTORY_UPDATE_REMARK_SEQ.NEXTVAL INTO :NEW.MAPPING_ID FROM DUAL;
END;@
    --更新库存日志
  CREATE TABLE INVENTORY_UPDATE_REMARK
    (
        ID INT(10) NOT NULL ,
        OUTER_SKU_ID VARCHAR(30) NOT NULL,--商家编码
        STOCKNUMBER int(10),--可买库存
        ISFULL TINYINT(1) NOT NULL,--是否全量
        MODIFYTIME VARCHAR(30),--修改时间
        APPLICATIONID INT(10) NOT NULL,--应用id
        PRIMARY KEY (id),
        FOREIGN KEY (APPLICATIONID) REFERENCES `application` (`APPLICATION_ID`) ON
        DELETE
        CASCADE,
        INDEX INDEX_SKU_PARTNUMBER_MAPPING (OUTER_SKU_ID,APPLICATIONID),
         CONSTRAINT UNIQUE_INVENTORY_UPDATE_REMARK UNIQUE (OUTER_SKU_ID, APPLICATIONID)
    );
    
    INSERT INTO registrydata (REGISTRY_KEY, REGISTRY_VALUE, REGISTRY_DESCRIPTION) VALUES ('isToInventoryUpdateInterface', 'N', '是否不管限制条件，直接去调库存更新接口');
    
----------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------
--天猫产品类目关联表
/*CREATE TABLE TMALL_PRODUCTCAT_MAPPING(
     MAPPING_ID INTEGER NOT NULL, --主键
     CHANNEL_CAT_ID INTEGER NOT NULL,     --渠道叶子类目id
     PRODUCT_ID INTEGER NOT NULL,   --天猫产品id
     APPLICATION_ID INTEGER NOT NULL,    --所属应用
     PRIMARY KEY (MAPPING_ID),       --主键
     FOREIGN KEY(APPLICATION_ID) REFERENCES APPLICATION(APPLICATION_ID) ON DELETE CASCADE
);*/
/*CREATE SEQUENCE "MEDIATORUR"."TM_PROCAT_MAPPING_SEQ" MINVALUE 1 MAXVALUE 10000 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER NOCYCLE;
@delimiter @;
CREATE OR REPLACE TRIGGER "MEDIATORUR"."TM_PROCAT_MAPPING_TRIGGER" 
BEFORE INSERT ON TMALL_PRODUCTCAT_MAPPING FOR EACH ROW
BEGIN
SELECT TM_PROCAT_MAPPING_SEQ.NEXTVAL INTO :NEW.MAPPING_ID FROM DUAL;
END;@*/

--天猫属性映射
/*CREATE TABLE ATTRIBUTE_MAPPING(
    CID INTEGER NOT NULL,   --平台(天猫等)类目id
    CHANNELKEY VARCHAR2(100) NOT NULL,
    OMSKEY VARCHAR2(100) NOT NULL,
    CONSTRAINT UNIQUE_ATTRIBUTE_MAPPING UNIQUE (CHANNELKEY)
);*/

--商品图片(淘宝使用)
--DROP TABLE PRODUCT_IMAGE;
/*CREATE TABLE PRODUCT_IMAGE(
    ID INTEGER NOT NULL,
    CHANNEL_PRODUCT_ID VARCHAR2(20) NOT NULL,
    IMAGE_ID VARCHAR2(20) NOT NULL,
    SORT INTEGER,
    APPLICATION_ID INTEGER NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (APPLICATION_ID) REFERENCES application (APPLICATION_ID) ON DELETE CASCADE
);
CREATE SEQUENCE "MEDIATORUR"."PRODUCT_IMAGE_SEQ" MINVALUE 1 MAXVALUE 10000 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER NOCYCLE;
@delimiter @;
CREATE OR REPLACE TRIGGER "MEDIATORUR"."PRODUCT_IMAGE_TRIGGER" 
BEFORE INSERT ON PRODUCT_IMAGE FOR EACH ROW
BEGIN
SELECT PRODUCT_IMAGE_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;@*/

--DROP TABLE TMALL_CHANNEL_ATTR_MAPPING;
--天猫渠道属性映射表
/*CREATE TABLE TMALL_CHANNEL_ATTR_MAPPING(
    MAPPING_ID INTEGER NOT NULL, --主键
    CHANNEL_CAT_ID INTEGER NOT NULL,     --渠道叶子类目id
    CHANNEL_ATTR_ID VARCHAR2(20) NOT NULL,   --渠道属性id
    CHANNEL_ATTR_NAME VARCHAR2(30),      --渠道属性名称
    ATTR_CODE VARCHAR2(20) NOT NULL,     --系统属性编号
    DEFAULT_VALUE VARCHAR2(30),      --默认值
    APPLICATION_ID INTEGER NOT NULL,    --所属应用
    PRIMARY KEY (MAPPING_ID),       --主键
    FOREIGN KEY(APPLICATION_ID) REFERENCES APPLICATION(APPLICATION_ID) ON DELETE CASCADE
);
ALTER TABLE TMALL_CHANNEL_ATTR_MAPPING ADD CONSTRAINT UK_TMALL_ATTR_MAPPING UNIQUE (CHANNEL_CAT_ID, ATTR_CODE, APPLICATION_ID);*/

--DROP TABLE CHANNEL_ATTRVAL_MAPPING;
--渠道属性值映射表
/*CREATE TABLE CHANNEL_ATTRVAL_MAPPING(
    MAPPING_ID INTEGER NOT NULL, --主键
    CHANNEL_CAT_ID INTEGER NOT NULL,     --渠道叶子类目id
    CHANNEL_ATTR_ID VARCHAR2(20) NOT NULL,   --渠道属性id
    CHANNEL_ATTRVAL_ID VARCHAR2(20) NOT NULL,    --渠道属性值id
    CHANNEL_ATTRVAL VARCHAR2(30) NOT NULL,        --渠道属性值
    ATTR_CODE VARCHAR2(20) NOT NULL,     --系统属性编号
    ATTRVAL_CODE VARCHAR2(20) NOT NULL,     --系统属性值编号
    ATTRVAL VARCHAR2(30) NOT NULL,        --系统属性值
    APPLICATION_ID INTEGER NOT NULL,    --所属应用
    PRIMARY KEY (MAPPING_ID),       --主键
    FOREIGN KEY(APPLICATION_ID) REFERENCES APPLICATION(APPLICATION_ID) ON DELETE CASCADE
);
ALTER TABLE CHANNEL_ATTRVAL_MAPPING ADD CONSTRAINT UK_ATTRVAL_MAPPING UNIQUE (CHANNEL_CAT_ID, CHANNEL_ATTR_ID, ATTRVAL, APPLICATION_ID);*/

--DROP TABLE JD_CHANNEL_ATTR_MAPPING;
--京东渠道属性映射表
/*CREATE TABLE JD_CHANNEL_ATTR_MAPPING(
    MAPPING_ID INTEGER NOT NULL, --主键
    CHANNEL_CAT_ID INTEGER NOT NULL,     --渠道叶子类目id
    CHANNEL_ATTR_ID VARCHAR2(20) NOT NULL,   --渠道属性id
    CHANNEL_ATTR_NAME VARCHAR2(30),      --渠道属性名称
    ATTR_CODE VARCHAR2(20) NOT NULL,     --系统属性编号
    DEFAULT_VALUE VARCHAR2(30),      --默认值
    ATTR_TYPE INTEGER NOT NULL,  --属性类型
    INPUT_TYPE INTEGER NOT NULL,     --输入类型
    KEYPROP INTEGER NOT NULL,    --是否关键属性
    SALEPROP INTEGER NOT NULL,   --是否销售属性
    COLORPROP INTEGER,   --是否颜色属性
    SIZEPROP INTEGER,    --是否尺码属性
    REQUIRED INTEGER NOT NULL,   --是否必填属性
    APPLICATION_ID INTEGER NOT NULL,    --所属应用
    STATUS INTEGER DEFAULT 1 NOT NULL,   --状态,1:可用,0:不可用
    PRIMARY KEY (MAPPING_ID),       --主键
    FOREIGN KEY(APPLICATION_ID) REFERENCES APPLICATION(APPLICATION_ID) ON DELETE CASCADE
);
ALTER TABLE JD_CHANNEL_ATTR_MAPPING ADD CONSTRAINT UK_JD_ATTR_MAPPING UNIQUE (CHANNEL_CAT_ID, ATTR_CODE, APPLICATION_ID);*/

--DROP TABLE TB_CHANNEL_ATTR_MAPPING;
--淘宝渠道属性映射表
/*CREATE TABLE TB_CHANNEL_ATTR_MAPPING(
    MAPPING_ID INTEGER NOT NULL, --主键
    CHANNEL_CAT_ID INTEGER NOT NULL,     --渠道叶子类目id
    CHANNEL_ATTR_ID VARCHAR2(20) NOT NULL,   --渠道属性id
    CHANNEL_ATTR_NAME VARCHAR2(30),      --渠道属性名称
    ATTR_CODE VARCHAR2(20) NOT NULL,     --系统属性编号
    DEFAULT_VALUE VARCHAR2(30),      --默认值
    KEYPROP INTEGER NOT NULL,    --是否关键属性
    SALEPROP INTEGER NOT NULL,   --是否销售属性
    COLORPROP INTEGER,   --是否颜色属性
    ENUMPROP INTEGER,    --是否可枚举属性
    ITEMPROP INTEGER,    --是否商品属性
    MUST INTEGER NOT NULL,    --发布产品或商品时是否为必选属性
    MULTI INTEGER,   --发布产品或商品时是否可以多选
    STATUS INTEGER DEFAULT 1 NOT NULL,   --状态,1:可用,0:不可用
    INPUTPROP INTEGER NOT NULL,   --在is_enum_prop是true的前提下，是否是卖家可以自行输入的属性
    ATTR_TYPE INTEGER NOT NULL,  --属性值类型
    REQUIRED INTEGER NOT NULL,   --是否必填属性
    APPLICATION_ID INTEGER NOT NULL,    --所属应用
    PRIMARY KEY (MAPPING_ID),
    FOREIGN KEY(APPLICATION_ID) REFERENCES APPLICATION(APPLICATION_ID) ON DELETE CASCADE
);
ALTER TABLE TB_CHANNEL_ATTR_MAPPING ADD CONSTRAINT UK_TB_ATTR_MAPPING UNIQUE (CHANNEL_CAT_ID, ATTR_CODE, APPLICATION_ID);*/
